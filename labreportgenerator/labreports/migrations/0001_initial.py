# Generated by Django 4.0.6 on 2023-09-30 18:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Biochemistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sugar_f', models.FloatField(blank=True, help_text='(70-110) mg/dl', null=True)),
                ('sugar_pp', models.FloatField(blank=True, help_text='(70-140) mg/dl', null=True)),
                ('sugar_r', models.FloatField(blank=True, help_text='(70-140) mg/dl', null=True)),
                ('serum_urea', models.FloatField(blank=True, help_text='(10-45) mg/dl', null=True)),
                ('creatine', models.FloatField(blank=True, help_text='(0.5-1.5) mg/dl', null=True)),
                ('sodium', models.FloatField(blank=True, null=True)),
                ('potassium', models.FloatField(blank=True, null=True)),
                ('uric_acid', models.FloatField(blank=True, help_text='(2-7) mg/dl', null=True)),
                ('s_calcium', models.FloatField(blank=True, help_text='(8.5-11) mg/dl', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hematology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HB', models.FloatField(blank=True, help_text='(12-16) gm/dl', null=True)),
                ('total_count', models.FloatField(blank=True, help_text='(4000-11000) /mm³', null=True)),
                ('neutrophils', models.FloatField(blank=True, help_text='(45-70) %', null=True)),
                ('lymphocytes', models.FloatField(blank=True, help_text='(20-40) %', null=True)),
                ('monocytes', models.FloatField(blank=True, help_text='(2-10) %', null=True)),
                ('eosinophils', models.FloatField(blank=True, help_text='(2-6) %', null=True)),
                ('basophils', models.FloatField(blank=True, help_text='(0-1) %', null=True)),
                ('RBC', models.FloatField(blank=True, help_text='(4.5-5) * 10⁵ /mm³', null=True)),
                ('platelets', models.FloatField(blank=True, help_text='(1.5-3) * 10⁵ /mm³', null=True)),
                ('ESR', models.FloatField(blank=True, help_text='(0-20) mm/hr', null=True)),
                ('PCV', models.FloatField(blank=True, help_text='(36-54) %', null=True)),
                ('MCV', models.FloatField(blank=True, help_text='(82-92) fl', null=True)),
                ('MCH', models.FloatField(blank=True, help_text='(27-36) pg', null=True)),
                ('MCHC', models.FloatField(blank=True, help_text='(32-36) %', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LipidProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triglyceride', models.FloatField(blank=True, help_text='(<200) mg/dL', null=True)),
                ('t_cholesterol', models.FloatField(blank=True, help_text='(<200) mg/dL', null=True)),
                ('hdl_cholesterol', models.FloatField(blank=True, help_text='(30-70) mg/dL', null=True)),
                ('ldl_cholesterol', models.FloatField(blank=True, help_text='(up to 150) mg/dL', null=True)),
                ('vldl_cholesterol', models.FloatField(blank=True, help_text='(3-32) mg/dL', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LiverFunctionTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_bilirubin', models.FloatField(blank=True, help_text='(0.2-1) mg/dl', null=True)),
                ('direct', models.FloatField(blank=True, help_text='Up to 0.4 mg/dl', null=True)),
                ('sgpt', models.FloatField(blank=True, help_text='(3-35) U/L', null=True)),
                ('sgot', models.FloatField(blank=True, help_text='(5-40) U/L', null=True)),
                ('alkaline_phosphatase', models.FloatField(blank=True, help_text='<306 U/L', null=True)),
                ('total_protein', models.FloatField(blank=True, help_text='(6-8) g/dl', null=True)),
                ('a_g_ratio', models.FloatField(blank=True, help_text='(1.2-1.8) gm/dl', null=True)),
                ('serum_albumin', models.FloatField(blank=True, help_text='(3.2-4.6) g/dl', null=True)),
                ('globulin', models.FloatField(blank=True, help_text='(3.2-4.6) g/dl', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Ms.', 'Ms.'), ('Miss', 'Miss')], max_length=5, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sex', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('age_time', models.CharField(blank=True, choices=[('YRS', 'YRS'), ('MONTHS', 'MONTHS'), ('DAYS', 'DAYS')], max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('refer_hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='labreports.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Serology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hbsag', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('hiv_1_2_ab', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('vdrl_rpr', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('hiv_i_ii', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('hcv', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('crp', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('aso', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('ra', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('typhoid_igg_igm', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('dengue_ns1_ag', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('dengue_igg_igm', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('scrub_typhus_igg_igm', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('h_pylori_igg_igm', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('sputum_for_afb_i', models.CharField(blank=True, max_length=10, null=True)),
                ('sputum_for_afb_ii', models.CharField(blank=True, max_length=10, null=True)),
                ('mantoux', models.CharField(blank=True, max_length=10, null=True)),
                ('diameter_after_48_72_hrs', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, help_text='Stool color', max_length=50)),
                ('consistency', models.CharField(blank=True, choices=[('loose', 'Loose'), ('solid', 'Solid'), ('semi-solid', 'Semi-Solid')], help_text='Stool consistency (loose, solid, semi-solid)', max_length=50, null=True)),
                ('blood', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], help_text='Blood presence (Present or Absent)', max_length=50, null=True)),
                ('mucus', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], help_text='Mucus presence (Present or Absent)', max_length=50, null=True)),
                ('pus_cells', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('rbc', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('ova', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('cyst', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('worm', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('fat_globules', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('yeast_cells', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('undigested_food_particles', models.CharField(blank=True, help_text='/HPF', max_length=50)),
                ('others', models.CharField(blank=True, help_text='/HPF', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bt', models.CharField(blank=True, help_text='(2-7)Min)', max_length=10, null=True)),
                ('ct', models.CharField(blank=True, help_text='(5-11)Min', max_length=10, null=True)),
                ('rdt_for_mp', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
                ('blood_group_abo_typing', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('O', 'O'), ('AB', 'AB')], max_length=10, null=True)),
                ('blood_group_rh', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Urine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, choices=[('L.Yellow', 'Light Yellow'), ('D.Yellow', 'Dark Yellow'), ('Watery', 'Watery'), ('Yellowish', 'Yellowish'), ('Reddish', 'Reddish')], max_length=20, null=True)),
                ('appearance', models.CharField(blank=True, choices=[('clear', 'Clear'), ('S.turbid', 'Slightly Turbid'), ('turbid', 'Turbid'), ('cloudy', 'Cloudy')], max_length=20, null=True)),
                ('reaction', models.CharField(blank=True, choices=[('Acidic', 'Acidic'), ('Alkaline', 'Alkaline')], max_length=10, null=True)),
                ('sugar', models.CharField(blank=True, choices=[('nil', 'Nil'), ('trace', 'Trace'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], max_length=10, null=True)),
                ('protein', models.CharField(blank=True, choices=[('nil', 'Nil'), ('trace', 'Trace'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], max_length=10, null=True)),
                ('rbc', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('pus_cells', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('epithelial_cells', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('calcium_oxalates', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('crystals', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('casts', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('bacteria', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
                ('others', models.CharField(blank=True, help_text='/HPF', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WidalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anti_o', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('1:80', '1:80'), ('1:160', '1:160'), ('1:320', '1:320')], max_length=10, null=True)),
                ('anti_h', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('1:80', '1:80'), ('1:160', '1:160'), ('1:320', '1:320')], max_length=10, null=True)),
                ('anti_ah', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('1:80', '1:80'), ('1:160', '1:160'), ('1:320', '1:320')], max_length=10, null=True)),
                ('anti_bh', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('1:80', '1:80'), ('1:160', '1:160'), ('1:320', '1:320')], max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('bio', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.biochemistry')),
                ('hematology', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.hematology')),
                ('lipid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.lipidprofile')),
                ('liver', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.liverfunctiontest')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labreports.patient')),
                ('sero', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.serology')),
                ('stool', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.stool')),
                ('test', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.test')),
                ('urine', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.urine')),
                ('widal', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labreports.widaltest')),
            ],
        ),
    ]
